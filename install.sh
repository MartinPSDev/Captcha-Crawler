#!/bin/bash

# Script de instalaci√≥n para CAPTCHA Crawler
# Configuraci√≥n autom√°tica en entorno Linux

echo "üöÄ Instalando CAPTCHA Crawler..."
echo "================================="

# Funci√≥n para manejar errores
handle_error() {
    echo "‚ùå Error: $1"
    echo "üí° Soluci√≥n sugerida: $2"
    exit 1
}

# Verificar si Python 3.8+ est√° instalado
if ! command -v python3 &> /dev/null; then
    handle_error "Python 3 no est√° instalado" "Ejecuta: sudo apt update && sudo apt install python3 python3-pip python3-venv"
fi

# Verificar versi√≥n de Python
PYTHON_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')" 2>/dev/null)
if [ $? -ne 0 ]; then
    handle_error "No se pudo verificar la versi√≥n de Python" "Reinstala Python 3"
fi
echo "‚úÖ Python $PYTHON_VERSION detectado"

# Verificar que python3-venv est√© instalado
if ! python3 -m venv --help &> /dev/null; then
    echo "‚ö†Ô∏è  python3-venv no est√° instalado. Instalando..."
    if command -v apt-get &> /dev/null; then
        sudo apt-get update && sudo apt-get install -y python3-venv python3-pip
    else
        handle_error "python3-venv no est√° disponible" "Instala python3-venv manualmente para tu distribuci√≥n"
    fi
fi

# Limpiar entorno virtual anterior si est√° corrupto
if [ -d "venv" ] && [ ! -f "venv/bin/activate" ]; then
    echo "üßπ Limpiando entorno virtual corrupto..."
    rm -rf venv
fi

# Crear entorno virtual
echo "üì¶ Creando entorno virtual..."
if [ ! -d "venv" ]; then
    if ! python3 -m venv venv; then
        handle_error "No se pudo crear el entorno virtual" "Verifica que python3-venv est√© instalado: sudo apt install python3-venv"
    fi
    echo "‚úÖ Entorno virtual creado"
else
    echo "‚ÑπÔ∏è  Entorno virtual ya existe"
fi

# Verificar que el entorno virtual se cre√≥ correctamente
if [ ! -f "venv/bin/activate" ]; then
    handle_error "El entorno virtual no se cre√≥ correctamente" "Elimina la carpeta venv y ejecuta el script nuevamente"
fi

# Activar entorno virtual
echo "üîß Activando entorno virtual..."
source venv/bin/activate

# Verificar que pip est√© disponible en el entorno virtual
if ! command -v pip &> /dev/null; then
    echo "üîß Instalando pip en el entorno virtual..."
    python -m ensurepip --upgrade || handle_error "No se pudo instalar pip" "Reinstala Python con pip incluido"
fi

# Actualizar pip
echo "‚¨ÜÔ∏è  Actualizando pip..."
if ! pip install --upgrade pip; then
    echo "‚ö†Ô∏è  No se pudo actualizar pip, continuando con la versi√≥n actual..."
fi

# Instalar dependencias
echo "üìö Instalando dependencias de Python..."
if ! pip install -r requirements.txt; then
    handle_error "No se pudieron instalar las dependencias de Python" "Verifica que requirements.txt existe y es v√°lido"
fi

# Instalar dependencias del sistema para Playwright ANTES de instalar navegadores
echo "üîß Instalando dependencias del sistema..."
if command -v apt-get &> /dev/null; then
    echo "üì¶ Detectado sistema basado en Debian/Ubuntu"
    echo "üì¶ Instalando dependencias del sistema necesarias..."
    
    # Instalar dependencias b√°sicas primero
    sudo apt-get update
    sudo apt-get install -y \
        libnss3-dev \
        libatk-bridge2.0-dev \
        libdrm2 \
        libxkbcommon0 \
        libgtk-3-dev \
        libgbm1 \
        libasound2-dev
    
    # Intentar instalar dependencias espec√≠ficas de Playwright
    if ! sudo playwright install-deps; then
        echo "‚ö†Ô∏è  Algunas dependencias del sistema no se pudieron instalar autom√°ticamente"
        echo "üí° Esto es normal en algunas distribuciones. Continuando..."
    fi
elif command -v yum &> /dev/null; then
    echo "üì¶ Detectado sistema basado en RedHat/CentOS"
    echo "‚ö†Ô∏è  Instala manualmente las dependencias del sistema para Playwright"
    echo "Consulta: https://playwright.dev/python/docs/browsers#system-requirements"
elif command -v pacman &> /dev/null; then
    echo "üì¶ Detectado Arch Linux"
    echo "‚ö†Ô∏è  Instala manualmente las dependencias del sistema para Playwright"
    echo "Consulta: https://playwright.dev/python/docs/browsers#system-requirements"
else
    echo "‚ö†Ô∏è  Sistema no reconocido. Instala manualmente las dependencias de Playwright"
fi

# Instalar navegadores de Playwright
echo "üåê Instalando navegadores de Playwright..."
if ! playwright install; then
    echo "‚ö†Ô∏è  Hubo problemas instalando algunos navegadores de Playwright"
    echo "üí° Esto puede ser normal en sistemas no oficialmente soportados"
    echo "üí° Intentando instalar solo Chromium..."
    playwright install chromium || echo "‚ö†Ô∏è  No se pudo instalar Chromium, pero el script puede funcionar"
fi

# Hacer ejecutable el script principal
chmod +x captcha_crawler.py

# Verificar que todo est√© instalado correctamente
echo "üîç Verificando instalaci√≥n..."
if python -c "import playwright; print('‚úÖ Playwright instalado correctamente')" 2>/dev/null; then
    echo "‚úÖ Verificaci√≥n exitosa"
else
    echo "‚ö†Ô∏è  Advertencia: Playwright puede no estar completamente funcional"
    echo "üí° Esto puede deberse a dependencias del sistema faltantes"
fi

echo ""
echo "üéâ ¬°Instalaci√≥n completada!"
echo "========================="
echo ""
echo "Para usar el crawler:"
echo "1. Activa el entorno virtual: source venv/bin/activate"
echo "2. Ejecuta: python3 captcha_crawler.py <URL>"
echo ""
echo "Ejemplos:"
echo "  python3 captcha_crawler.py https://example.com"
echo "  python3 captcha_crawler.py https://example.com --visible"
echo "  python3 captcha_crawler.py https://example.com --output results.json"
echo ""
echo "Para ver todas las opciones: python3 captcha_crawler.py --help"
echo ""
echo "üìù Los logs se guardan en: captcha_crawler.log"
echo ""
echo "üîß Soluci√≥n de problemas:"
echo "- Si hay errores de dependencias del sistema, ejecuta:"
echo "  sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon0 libgtk-3-dev libgbm1"
echo "- Si Playwright no funciona, intenta:"
echo "  source venv/bin/activate && playwright install-deps && playwright install chromium"
echo "- Para sistemas no soportados oficialmente, usa modo headless (sin --visible)"